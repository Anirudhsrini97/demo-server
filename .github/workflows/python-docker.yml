name: Python CI/CD with Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Run pylint
        run: |
          pylint --fail-under=8 $(find . -name "*.py")
#
#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: 3.9
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#          pip install pytest pytest-cov
#
#      - name: Run tests with coverage
#        run: |
#          pytest --cov=./
#
#      - name: Upload coverage report
#        uses: actions/upload-artifact@v3
#        with:
#          name: coverage-report
#          path: htmlcov/

  docker:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=anirudhpugazh97/flask-app
          VERSION=$(date +%Y%m%d%H%M%S)
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$VERSION .
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION

  # Job for Ansible
  run-ansible:
    name: Ansible script
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create SSH public key file
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa.pub
        shell: bash

      - name: Create SSH private key file
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
        shell: bash

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Run Ansible Playbook
        working-directory: ansible
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
        run: ansible-playbook -i inventory.ini server-deployment.yml
